export const testCases = [
  {
    input: "",
    camelCase: "",
    snakeCase: "",
    pascalCase: "",
    kebabCase: "",
    trainCase: "",
    titleCase: "",
    constantCase: "",
    dotCase: "",
    pathCase: "",
    sentenceCase: "",
    macroCase: "",
    flatCase: "",
    swapCase: "",
    spongeCase: "",
    lowerCase: "",
    upperCase: "",
    cobolCase: "",
  },
  {
    input: "hello world",
    camelCase: "helloWorld",
    snakeCase: "hello_world",
    pascalCase: "HelloWorld",
    kebabCase: "hello-world",
    trainCase: "Hello-World",
    titleCase: "Hello World",
    constantCase: "HELLO_WORLD",
    dotCase: "hello.world",
    pathCase: "hello/world",
    sentenceCase: "Hello world",
    macroCase: "HELLO_WORLD",
    flatCase: "helloworld",
    swapCase: "HELLO WORLD",
    spongeCase: "hElLo WoRlD",
    lowerCase: "hello world",
    upperCase: "HELLO WORLD",
    cobolCase: "HELLO-WORLD",
  },
  {
    input: "hello-world",
    camelCase: "helloWorld",
    snakeCase: "hello_world",
    pascalCase: "HelloWorld",
    kebabCase: "hello-world",
    trainCase: "Hello-World",
    titleCase: "Hello World",
    constantCase: "HELLO_WORLD",
    dotCase: "hello.world",
    pathCase: "hello/world",
    sentenceCase: "Hello world",
    macroCase: "HELLO_WORLD",
    flatCase: "helloworld",
    swapCase: "HELLO-WORLD",
    spongeCase: "hElLo-WoRlD",
    lowerCase: "hello-world",
    upperCase: "HELLO-WORLD",
    cobolCase: "HELLO-WORLD",
  },
  {
    input: "hello_world",
    camelCase: "helloWorld",
    snakeCase: "hello_world",
    pascalCase: "HelloWorld",
    kebabCase: "hello-world",
    trainCase: "Hello-World",
    titleCase: "Hello World",
    constantCase: "HELLO_WORLD",
    dotCase: "hello.world",
    pathCase: "hello/world",
    sentenceCase: "Hello world",
    macroCase: "HELLO_WORLD",
    flatCase: "helloworld",
    swapCase: "HELLO_WORLD",
    spongeCase: "hElLo_WoRlD",
    lowerCase: "hello_world",
    upperCase: "HELLO_WORLD",
    cobolCase: "HELLO-WORLD",
  },
  {
    input: "Hello World",
    camelCase: "helloWorld",
    snakeCase: "hello_world",
    pascalCase: "HelloWorld",
    kebabCase: "hello-world",
    trainCase: "Hello-World",
    titleCase: "Hello World",
    constantCase: "HELLO_WORLD",
    dotCase: "hello.world",
    pathCase: "hello/world",
    sentenceCase: "Hello world",
    macroCase: "HELLO_WORLD",
    flatCase: "helloworld",
    swapCase: "hELLO wORLD",
    spongeCase: "hElLo WoRlD",
    lowerCase: "hello world",
    upperCase: "HELLO WORLD",
    cobolCase: "HELLO-WORLD",
  },
  {
    input: "hello-World",
    camelCase: "helloWorld",
    snakeCase: "hello_world",
    pascalCase: "HelloWorld",
    kebabCase: "hello-world",
    trainCase: "Hello-World",
    titleCase: "Hello World",
    constantCase: "HELLO_WORLD",
    dotCase: "hello.world",
    pathCase: "hello/world",
    sentenceCase: "Hello world",
    macroCase: "HELLO_WORLD",
    flatCase: "helloworld",
    swapCase: "HELLO-wORLD",
    spongeCase: "hElLo-WoRlD",
    lowerCase: "hello-world",
    upperCase: "HELLO-WORLD",
    cobolCase: "HELLO-WORLD",
  },
  {
    input: "hello - world_test",
    camelCase: "helloWorldTest",
    snakeCase: "hello_world_test",
    pascalCase: "HelloWorldTest",
    kebabCase: "hello-world-test",
    trainCase: "Hello-World-Test",
    titleCase: "Hello World Test",
    constantCase: "HELLO_WORLD_TEST",
    dotCase: "hello.world.test",
    pathCase: "hello/world/test",
    sentenceCase: "Hello world test",
    macroCase: "HELLO_WORLD_TEST",
    flatCase: "helloworldtest",
    swapCase: "HELLO - WORLD_TEST",
    spongeCase: "hElLo - WoRlD_tEsT",
    lowerCase: "hello - world_test",
    upperCase: "HELLO - WORLD_TEST",
    cobolCase: "HELLO-WORLD-TEST",
  },
  {
    input: "HelloWorld",
    camelCase: "helloWorld",
    snakeCase: "hello_world",
    pascalCase: "HelloWorld",
    kebabCase: "hello-world",
    trainCase: "Hello-World",
    titleCase: "Hello World",
    constantCase: "HELLO_WORLD",
    dotCase: "hello.world",
    pathCase: "hello/world",
    sentenceCase: "Hello world",
    macroCase: "HELLO_WORLD",
    flatCase: "helloworld",
    swapCase: "hELLOwORLD",
    spongeCase: "hElLoWoRlD",
    lowerCase: "helloworld",
    upperCase: "HELLOWORLD",
    cobolCase: "HELLO-WORLD",
  },
  {
    input: "123hello",
    camelCase: "123hello",
    snakeCase: "123hello",
    pascalCase: "123hello",
    kebabCase: "123hello",
    trainCase: "123hello",
    titleCase: "123hello",
    constantCase: "123HELLO",
    dotCase: "123hello",
    pathCase: "123hello",
    sentenceCase: "123hello",
    macroCase: "123HELLO",
    flatCase: "123hello",
    swapCase: "123HELLO",
    spongeCase: "123hElLo",
    lowerCase: "123hello",
    upperCase: "123HELLO",
    cobolCase: "123HELLO",
  },
  {
    input: "hello123world",
    camelCase: "hello123world",
    snakeCase: "hello123world",
    pascalCase: "Hello123world",
    kebabCase: "hello123world",
    trainCase: "Hello123world",
    titleCase: "Hello123world",
    constantCase: "HELLO123WORLD",
    dotCase: "hello123world",
    pathCase: "hello123world",
    sentenceCase: "Hello123world",
    macroCase: "HELLO123WORLD",
    flatCase: "hello123world",
    swapCase: "HELLO123WORLD",
    spongeCase: "hElLo123WoRlD",
    lowerCase: "hello123world",
    upperCase: "HELLO123WORLD",
    cobolCase: "HELLO123WORLD",
  },
  {
    input: "HELLO_WORLD",
    camelCase: "helloWorld",
    snakeCase: "hello_world",
    pascalCase: "HelloWorld",
    kebabCase: "hello-world",
    trainCase: "Hello-World",
    titleCase: "Hello World",
    constantCase: "HELLO_WORLD",
    dotCase: "hello.world",
    pathCase: "hello/world",
    sentenceCase: "Hello world",
    macroCase: "HELLO_WORLD",
    flatCase: "helloworld",
    swapCase: "hello_world",
    spongeCase: "hElLo_WoRlD",
    lowerCase: "hello_world",
    upperCase: "HELLO_WORLD",
    cobolCase: "HELLO-WORLD",
  },
  {
    input: "__hello__world__",
    camelCase: "helloWorld",
    snakeCase: "hello_world",
    pascalCase: "HelloWorld",
    kebabCase: "hello-world",
    trainCase: "Hello-World",
    titleCase: "Hello World",
    constantCase: "HELLO_WORLD",
    dotCase: "hello.world",
    pathCase: "hello/world",
    sentenceCase: "Hello world",
    macroCase: "HELLO_WORLD",
    flatCase: "helloworld",
    swapCase: "__HELLO__WORLD__",
    spongeCase: "__hElLo__WoRlD__",
    lowerCase: "__hello__world__",
    upperCase: "__HELLO__WORLD__",
    cobolCase: "HELLO-WORLD",
  },
  {
    input: "  hello   world  ",
    camelCase: "helloWorld",
    snakeCase: "hello_world",
    pascalCase: "HelloWorld",
    kebabCase: "hello-world",
    trainCase: "Hello-World",
    titleCase: "Hello World",
    constantCase: "HELLO_WORLD",
    dotCase: "hello.world",
    pathCase: "hello/world",
    sentenceCase: "Hello world",
    macroCase: "HELLO_WORLD",
    flatCase: "helloworld",
    swapCase: "HELLO WORLD",
    spongeCase: "hElLo WoRlD",
    lowerCase: "hello world",
    upperCase: "HELLO WORLD",
    cobolCase: "HELLO-WORLD",
  },
];

export const specialCharacterTestCases = [
  {
    input: "hello@world",
    camelCase: { preserveSpecialCharacters: true, result: "hello@world" },
    snakeCase: { preserveSpecialCharacters: true, result: "hello@world" },
    kebabCase: { preserveSpecialCharacters: true, result: "hello@world" },
    pascalCase: { preserveSpecialCharacters: true, result: "Hello@World" },
    trainCase: { preserveSpecialCharacters: true, result: "Hello@World" },
    titleCase: { preserveSpecialCharacters: true, result: "Hello@World" },
    constantCase: { preserveSpecialCharacters: true, result: "HELLO@WORLD" },
    dotCase: { preserveSpecialCharacters: true, result: "hello@world" },
    pathCase: { preserveSpecialCharacters: true, result: "hello@world" },
    sentenceCase: { preserveSpecialCharacters: true, result: "Hello@world" },
    macroCase: { preserveSpecialCharacters: true, result: "HELLO@WORLD" },
    flatCase: { preserveSpecialCharacters: true, result: "hello@world" },
    spongeCase: { preserveSpecialCharacters: true, result: "hElLo@WoRlD" },
    lowercase: { preserveSpecialCharacters: true, result: "hello@world" },
    uppercase: { preserveSpecialCharacters: true, result: "HELLO@WORLD" },
    cobolCase: { preserveSpecialCharacters: true, result: "HELLO@WORLD" },
  },
  {
    input: "user.name.first",
    camelCase: { preserveSpecialCharacters: true, result: "user.name.first" },
    snakeCase: { preserveSpecialCharacters: true, result: "user.name.first" },
    kebabCase: { preserveSpecialCharacters: true, result: "user.name.first" },
    pascalCase: { preserveSpecialCharacters: true, result: "User.Name.First" },
    trainCase: { preserveSpecialCharacters: true, result: "User.Name.First" },
    titleCase: { preserveSpecialCharacters: true, result: "User.Name.First" },
    constantCase: {
      preserveSpecialCharacters: true,
      result: "USER.NAME.FIRST",
    },
    dotCase: { preserveSpecialCharacters: true, result: "user.name.first" },
    pathCase: { preserveSpecialCharacters: true, result: "user.name.first" },
    sentenceCase: {
      preserveSpecialCharacters: true,
      result: "User.name.first",
    },
    macroCase: { preserveSpecialCharacters: true, result: "USER.NAME.FIRST" },
    flatCase: { preserveSpecialCharacters: true, result: "user.name.first" },
    spongeCase: { preserveSpecialCharacters: true, result: "uSeR.nAmE.fIrSt" },
    lowercase: { preserveSpecialCharacters: true, result: "user.name.first" },
    uppercase: { preserveSpecialCharacters: true, result: "USER.NAME.FIRST" },
    cobolCase: { preserveSpecialCharacters: true, result: "USER.NAME.FIRST" },
  },
  {
    input: "api/v1/users",
    camelCase: { preserveSpecialCharacters: true, result: "api/v1/users" },
    snakeCase: { preserveSpecialCharacters: true, result: "api/v1/users" },
    kebabCase: { preserveSpecialCharacters: true, result: "api/v1/users" },
    pascalCase: { preserveSpecialCharacters: true, result: "Api/V1/Users" },
    trainCase: { preserveSpecialCharacters: true, result: "Api/V1/Users" },
    titleCase: { preserveSpecialCharacters: true, result: "Api/V1/Users" },
    constantCase: { preserveSpecialCharacters: true, result: "API/V1/USERS" },
    dotCase: { preserveSpecialCharacters: true, result: "api/v1/users" },
    pathCase: { preserveSpecialCharacters: true, result: "api/v1/users" },
    sentenceCase: { preserveSpecialCharacters: true, result: "Api/v1/users" },
    macroCase: { preserveSpecialCharacters: true, result: "API/V1/USERS" },
    flatCase: { preserveSpecialCharacters: true, result: "api/v1/users" },
    spongeCase: { preserveSpecialCharacters: true, result: "aPi/V1/uSeRs" },
    lowercase: { preserveSpecialCharacters: true, result: "api/v1/users" },
    uppercase: { preserveSpecialCharacters: true, result: "API/V1/USERS" },
    cobolCase: { preserveSpecialCharacters: true, result: "API/V1/USERS" },
  },
  {
    input: "$special_var",
    camelCase: { preserveSpecialCharacters: true, result: "$special_var" },
    snakeCase: { preserveSpecialCharacters: true, result: "$special_var" },
    kebabCase: { preserveSpecialCharacters: true, result: "$special_var" },
    pascalCase: { preserveSpecialCharacters: true, result: "$Special_Var" },
    trainCase: { preserveSpecialCharacters: true, result: "$Special_Var" },
    titleCase: { preserveSpecialCharacters: true, result: "$Special_Var" },
    constantCase: { preserveSpecialCharacters: true, result: "$SPECIAL_VAR" },
    dotCase: { preserveSpecialCharacters: true, result: "$special_var" },
    pathCase: { preserveSpecialCharacters: true, result: "$special_var" },
    sentenceCase: { preserveSpecialCharacters: true, result: "$special_var" },
    macroCase: { preserveSpecialCharacters: true, result: "$SPECIAL_VAR" },
    flatCase: { preserveSpecialCharacters: true, result: "$special_var" },
    spongeCase: { preserveSpecialCharacters: true, result: "$sPeCiAl_VaR" },
    lowercase: { preserveSpecialCharacters: true, result: "$special_var" },
    uppercase: { preserveSpecialCharacters: true, result: "$SPECIAL_VAR" },
    cobolCase: { preserveSpecialCharacters: true, result: "$SPECIAL_VAR" },
  },
  {
    input: "email@domain.com",
    camelCase: { preserveSpecialCharacters: true, result: "email@domain.com" },
    snakeCase: { preserveSpecialCharacters: true, result: "email@domain.com" },
    kebabCase: { preserveSpecialCharacters: true, result: "email@domain.com" },
    pascalCase: { preserveSpecialCharacters: true, result: "Email@Domain.Com" },
    trainCase: { preserveSpecialCharacters: true, result: "Email@Domain.Com" },
    titleCase: { preserveSpecialCharacters: true, result: "Email@Domain.Com" },
    constantCase: {
      preserveSpecialCharacters: true,
      result: "EMAIL@DOMAIN.COM",
    },
    dotCase: { preserveSpecialCharacters: true, result: "email@domain.com" },
    pathCase: { preserveSpecialCharacters: true, result: "email@domain.com" },
    sentenceCase: {
      preserveSpecialCharacters: true,
      result: "Email@domain.com",
    },
    macroCase: { preserveSpecialCharacters: true, result: "EMAIL@DOMAIN.COM" },
    flatCase: { preserveSpecialCharacters: true, result: "email@domain.com" },
    spongeCase: { preserveSpecialCharacters: true, result: "eMaIl@DoMaIn.CoM" },
    lowercase: { preserveSpecialCharacters: true, result: "email@domain.com" },
    uppercase: { preserveSpecialCharacters: true, result: "EMAIL@DOMAIN.COM" },
    cobolCase: { preserveSpecialCharacters: true, result: "EMAIL@DOMAIN.COM" },
  },
  {
    input: "path\\to\\file",
    camelCase: { preserveSpecialCharacters: true, result: "path\\to\\file" },
    snakeCase: { preserveSpecialCharacters: true, result: "path\\to\\file" },
    kebabCase: { preserveSpecialCharacters: true, result: "path\\to\\file" },
    pascalCase: { preserveSpecialCharacters: true, result: "Path\\To\\File" },
    trainCase: { preserveSpecialCharacters: true, result: "Path\\To\\File" },
    titleCase: { preserveSpecialCharacters: true, result: "Path\\To\\File" },
    constantCase: { preserveSpecialCharacters: true, result: "PATH\\TO\\FILE" },
    dotCase: { preserveSpecialCharacters: true, result: "path\\to\\file" },
    pathCase: { preserveSpecialCharacters: true, result: "path\\to\\file" },
    sentenceCase: { preserveSpecialCharacters: true, result: "Path\\to\\file" },
    macroCase: { preserveSpecialCharacters: true, result: "PATH\\TO\\FILE" },
    flatCase: { preserveSpecialCharacters: true, result: "path\\to\\file" },
    spongeCase: { preserveSpecialCharacters: true, result: "pAtH\\tO\\fIlE" },
    lowercase: { preserveSpecialCharacters: true, result: "path\\to\\file" },
    uppercase: { preserveSpecialCharacters: true, result: "PATH\\TO\\FILE" },
    cobolCase: { preserveSpecialCharacters: true, result: "PATH\\TO\\FILE" },
  },
  {
    input: "#tag-name",
    camelCase: { preserveSpecialCharacters: true, result: "#tag-name" },
    snakeCase: { preserveSpecialCharacters: true, result: "#tag-name" },
    kebabCase: { preserveSpecialCharacters: true, result: "#tag-name" },
    pascalCase: { preserveSpecialCharacters: true, result: "#Tag-Name" },
    trainCase: { preserveSpecialCharacters: true, result: "#Tag-Name" },
    titleCase: { preserveSpecialCharacters: true, result: "#Tag-Name" },
    constantCase: { preserveSpecialCharacters: true, result: "#TAG-NAME" },
    dotCase: { preserveSpecialCharacters: true, result: "#tag-name" },
    pathCase: { preserveSpecialCharacters: true, result: "#tag-name" },
    sentenceCase: { preserveSpecialCharacters: true, result: "#tag-name" },
    macroCase: { preserveSpecialCharacters: true, result: "#TAG-NAME" },
    flatCase: { preserveSpecialCharacters: true, result: "#tag-name" },
    spongeCase: { preserveSpecialCharacters: true, result: "#tAg-NaMe" },
    lowercase: { preserveSpecialCharacters: true, result: "#tag-name" },
    uppercase: { preserveSpecialCharacters: true, result: "#TAG-NAME" },
    cobolCase: { preserveSpecialCharacters: true, result: "#TAG-NAME" },
  },
  {
    input: "first_name@2x",
    camelCase: { preserveSpecialCharacters: true, result: "first_name@2x" },
    snakeCase: { preserveSpecialCharacters: true, result: "first_name@2x" },
    kebabCase: { preserveSpecialCharacters: true, result: "first_name@2x" },
    pascalCase: { preserveSpecialCharacters: true, result: "First_Name@2x" },
    trainCase: { preserveSpecialCharacters: true, result: "First_Name@2x" },
    titleCase: { preserveSpecialCharacters: true, result: "First_Name@2x" },
    constantCase: { preserveSpecialCharacters: true, result: "FIRST_NAME@2X" },
    dotCase: { preserveSpecialCharacters: true, result: "first_name@2x" },
    pathCase: { preserveSpecialCharacters: true, result: "first_name@2x" },
    sentenceCase: { preserveSpecialCharacters: true, result: "First_name@2x" },
    macroCase: { preserveSpecialCharacters: true, result: "FIRST_NAME@2X" },
    flatCase: { preserveSpecialCharacters: true, result: "first_name@2x" },
    spongeCase: { preserveSpecialCharacters: true, result: "fIrSt_NaMe@2X" },
    lowercase: { preserveSpecialCharacters: true, result: "first_name@2x" },
    uppercase: { preserveSpecialCharacters: true, result: "FIRST_NAME@2X" },
    cobolCase: { preserveSpecialCharacters: true, result: "FIRST_NAME@2X" },
  },
  {
    input: "user&&admin||guest",
    camelCase: {
      preserveSpecialCharacters: true,
      result: "user&&admin||guest",
    },
    snakeCase: {
      preserveSpecialCharacters: true,
      result: "user&&admin||guest",
    },
    kebabCase: {
      preserveSpecialCharacters: true,
      result: "user&&admin||guest",
    },
    pascalCase: {
      preserveSpecialCharacters: true,
      result: "User&&Admin||Guest",
    },
    trainCase: {
      preserveSpecialCharacters: true,
      result: "User&&Admin||Guest",
    },
    titleCase: {
      preserveSpecialCharacters: true,
      result: "User&&Admin||Guest",
    },
    constantCase: {
      preserveSpecialCharacters: true,
      result: "USER&&ADMIN||GUEST",
    },
    dotCase: { preserveSpecialCharacters: true, result: "user&&admin||guest" },
    pathCase: { preserveSpecialCharacters: true, result: "user&&admin||guest" },
    sentenceCase: {
      preserveSpecialCharacters: true,
      result: "User&&admin||guest",
    },
    macroCase: {
      preserveSpecialCharacters: true,
      result: "USER&&ADMIN||GUEST",
    },
    flatCase: { preserveSpecialCharacters: true, result: "user&&admin||guest" },
    spongeCase: {
      preserveSpecialCharacters: true,
      result: "uSeR&&aDmIn||GuEsT",
    },
    lowercase: {
      preserveSpecialCharacters: true,
      result: "user&&admin||guest",
    },
    uppercase: {
      preserveSpecialCharacters: true,
      result: "USER&&ADMIN||GUEST",
    },
    cobolCase: {
      preserveSpecialCharacters: true,
      result: "USER&&ADMIN||GUEST",
    },
  },
  {
    input: "file.min.js",
    camelCase: { preserveSpecialCharacters: true, result: "file.min.js" },
    snakeCase: { preserveSpecialCharacters: true, result: "file.min.js" },
    kebabCase: { preserveSpecialCharacters: true, result: "file.min.js" },
    pascalCase: { preserveSpecialCharacters: true, result: "File.Min.Js" },
    trainCase: { preserveSpecialCharacters: true, result: "File.Min.Js" },
    titleCase: { preserveSpecialCharacters: true, result: "File.Min.Js" },
    constantCase: { preserveSpecialCharacters: true, result: "FILE.MIN.JS" },
    dotCase: { preserveSpecialCharacters: true, result: "file.min.js" },
    pathCase: { preserveSpecialCharacters: true, result: "file.min.js" },
    sentenceCase: { preserveSpecialCharacters: true, result: "File.min.js" },
    macroCase: { preserveSpecialCharacters: true, result: "FILE.MIN.JS" },
    flatCase: { preserveSpecialCharacters: true, result: "file.min.js" },
    spongeCase: { preserveSpecialCharacters: true, result: "fIlE.mIn.Js" },
    lowercase: { preserveSpecialCharacters: true, result: "file.min.js" },
    uppercase: { preserveSpecialCharacters: true, result: "FILE.MIN.JS" },
    cobolCase: { preserveSpecialCharacters: true, result: "FILE.MIN.JS" },
  },
  {
    input: "data[0].name",
    camelCase: { preserveSpecialCharacters: true, result: "data[0].name" },
    snakeCase: { preserveSpecialCharacters: true, result: "data[0].name" },
    kebabCase: { preserveSpecialCharacters: true, result: "data[0].name" },
    pascalCase: { preserveSpecialCharacters: true, result: "Data[0].Name" },
    trainCase: { preserveSpecialCharacters: true, result: "Data[0].Name" },
    titleCase: { preserveSpecialCharacters: true, result: "Data[0].Name" },
    constantCase: { preserveSpecialCharacters: true, result: "DATA[0].NAME" },
    dotCase: { preserveSpecialCharacters: true, result: "data[0].name" },
    pathCase: { preserveSpecialCharacters: true, result: "data[0].name" },
    sentenceCase: { preserveSpecialCharacters: true, result: "Data[0].name" },
    macroCase: { preserveSpecialCharacters: true, result: "DATA[0].NAME" },
    flatCase: { preserveSpecialCharacters: true, result: "data[0].name" },
    spongeCase: { preserveSpecialCharacters: true, result: "dAtA[0].nAmE" },
    lowercase: { preserveSpecialCharacters: true, result: "data[0].name" },
    uppercase: { preserveSpecialCharacters: true, result: "DATA[0].NAME" },
    cobolCase: { preserveSpecialCharacters: true, result: "DATA[0].NAME" },
  },
  {
    input: "!important-note",
    camelCase: { preserveSpecialCharacters: true, result: "!important-note" },
    snakeCase: { preserveSpecialCharacters: true, result: "!important-note" },
    kebabCase: { preserveSpecialCharacters: true, result: "!important-note" },
    pascalCase: { preserveSpecialCharacters: true, result: "!Important-Note" },
    trainCase: { preserveSpecialCharacters: true, result: "!Important-Note" },
    titleCase: { preserveSpecialCharacters: true, result: "!Important-Note" },
    constantCase: {
      preserveSpecialCharacters: true,
      result: "!IMPORTANT-NOTE",
    },
    dotCase: { preserveSpecialCharacters: true, result: "!important-note" },
    pathCase: { preserveSpecialCharacters: true, result: "!important-note" },
    sentenceCase: {
      preserveSpecialCharacters: true,
      result: "!important-note",
    },
    macroCase: { preserveSpecialCharacters: true, result: "!IMPORTANT-NOTE" },
    flatCase: { preserveSpecialCharacters: true, result: "!important-note" },
    spongeCase: { preserveSpecialCharacters: true, result: "!iMpOrTaNt-NoTe" },
    lowercase: { preserveSpecialCharacters: true, result: "!important-note" },
    uppercase: { preserveSpecialCharacters: true, result: "!IMPORTANT-NOTE" },
    cobolCase: { preserveSpecialCharacters: true, result: "!IMPORTANT-NOTE" },
  },
  {
    input: "calc(100% - 20px)",
    camelCase: { preserveSpecialCharacters: true, result: "calc(100%-20px)" },
    snakeCase: { preserveSpecialCharacters: true, result: "calc(100%_-_20px)" },
    kebabCase: { preserveSpecialCharacters: true, result: "calc(100%-20px)" },
    pascalCase: {
      preserveSpecialCharacters: true,
      result: "Calc(100% - 20px)",
    },
    trainCase: { preserveSpecialCharacters: true, result: "Calc(100% - 20px)" },
    titleCase: { preserveSpecialCharacters: true, result: "Calc(100% - 20px)" },
    constantCase: {
      preserveSpecialCharacters: true,
      result: "CALC(100% - 20PX)",
    },
    dotCase: { preserveSpecialCharacters: true, result: "calc(100% - 20px)" },
    pathCase: { preserveSpecialCharacters: true, result: "calc(100%-20px)" },
    sentenceCase: {
      preserveSpecialCharacters: true,
      result: "Calc(100% - 20px)",
    },
    macroCase: { preserveSpecialCharacters: true, result: "CALC(100% - 20PX)" },
    flatCase: { preserveSpecialCharacters: true, result: "calc(100%-20px)" },
    spongeCase: {
      preserveSpecialCharacters: true,
      result: "cAlC(100% - 20pX)",
    },
    lowercase: { preserveSpecialCharacters: true, result: "calc(100% - 20px)" },
    uppercase: { preserveSpecialCharacters: true, result: "CALC(100% - 20PX)" },
    cobolCase: { preserveSpecialCharacters: true, result: "CALC(100%-20PX)" },
  },
  {
    input: "__proto__",
    camelCase: { preserveSpecialCharacters: true, result: "__proto__" },
    snakeCase: { preserveSpecialCharacters: true, result: "__proto__" },
    kebabCase: { preserveSpecialCharacters: true, result: "__proto__" },
    pascalCase: { preserveSpecialCharacters: true, result: "__Proto__" },
    trainCase: { preserveSpecialCharacters: true, result: "__Proto__" },
    titleCase: { preserveSpecialCharacters: true, result: "__Proto__" },
    constantCase: { preserveSpecialCharacters: true, result: "__PROTO__" },
    dotCase: { preserveSpecialCharacters: true, result: "__proto__" },
    pathCase: { preserveSpecialCharacters: true, result: "__proto__" },
    sentenceCase: { preserveSpecialCharacters: true, result: "__proto__" },
    macroCase: { preserveSpecialCharacters: true, result: "__PROTO__" },
    flatCase: { preserveSpecialCharacters: true, result: "__proto__" },
    spongeCase: { preserveSpecialCharacters: true, result: "__pRoTo__" },
    lowercase: { preserveSpecialCharacters: true, result: "__proto__" },
    uppercase: { preserveSpecialCharacters: true, result: "__PROTO__" },
    cobolCase: { preserveSpecialCharacters: true, result: "__PROTO__" },
  },
  {
    input: "{{template}}",
    camelCase: { preserveSpecialCharacters: true, result: "{{template}}" },
    snakeCase: { preserveSpecialCharacters: true, result: "{{template}}" },
    kebabCase: { preserveSpecialCharacters: true, result: "{{template}}" },
    pascalCase: { preserveSpecialCharacters: true, result: "{{Template}}" },
    trainCase: { preserveSpecialCharacters: true, result: "{{Template}}" },
    titleCase: { preserveSpecialCharacters: true, result: "{{Template}}" },
    constantCase: { preserveSpecialCharacters: true, result: "{{TEMPLATE}}" },
    dotCase: { preserveSpecialCharacters: true, result: "{{template}}" },
    pathCase: { preserveSpecialCharacters: true, result: "{{template}}" },
    sentenceCase: { preserveSpecialCharacters: true, result: "{{template}}" },
    macroCase: { preserveSpecialCharacters: true, result: "{{TEMPLATE}}" },
    flatCase: { preserveSpecialCharacters: true, result: "{{template}}" },
    spongeCase: { preserveSpecialCharacters: true, result: "{{tEmPlAtE}}" },
    lowercase: { preserveSpecialCharacters: true, result: "{{template}}" },
    uppercase: { preserveSpecialCharacters: true, result: "{{TEMPLATE}}" },
    cobolCase: { preserveSpecialCharacters: true, result: "{{TEMPLATE}}" },
  },
];

export const objectTestCasesKeys = [
  {
    input: { first_name: "John", last_name: "Doe" },
    camelCase: { firstName: "John", lastName: "Doe" },
    snakeCase: { first_name: "John", last_name: "Doe" },
    pascalCase: { FirstName: "John", LastName: "Doe" },
    kebabCase: { "first-name": "John", "last-name": "Doe" },
    trainCase: { "First-Name": "John", "Last-Name": "Doe" },
    titleCase: { "First Name": "John", "Last Name": "Doe" },
    constantCase: { FIRST_NAME: "John", LAST_NAME: "Doe" },
    dotCase: { "first.name": "John", "last.name": "Doe" },
    pathCase: { "first/name": "John", "last/name": "Doe" },
    sentenceCase: { "First name": "John", "Last name": "Doe" },
    macroCase: { FIRST_NAME: "John", LAST_NAME: "Doe" },
    flatCase: { firstname: "John", lastname: "Doe" },
    swapCase: { FIRST_NAME: "John", LAST_NAME: "Doe" },
    spongeCase: { fIrSt_NaMe: "John", lAsT_nAmE: "Doe" },
    lowerCase: { first_name: "John", last_name: "Doe" },
    upperCase: { FIRST_NAME: "John", LAST_NAME: "Doe" },
    cobolCase: { "FIRST-NAME": "John", "LAST-NAME": "Doe" },
  },
  {
    input: { user_ids: [1, 2, 3] },
    camelCase: { userIds: [1, 2, 3] },
    snakeCase: { user_ids: [1, 2, 3] },
    pascalCase: { UserIds: [1, 2, 3] },
    kebabCase: { "user-ids": [1, 2, 3] },
    trainCase: { "User-Ids": [1, 2, 3] },
    titleCase: { "User Ids": [1, 2, 3] },
    constantCase: { USER_IDS: [1, 2, 3] },
    dotCase: { "user.ids": [1, 2, 3] },
    pathCase: { "user/ids": [1, 2, 3] },
    sentenceCase: { "User ids": [1, 2, 3] },
    macroCase: { USER_IDS: [1, 2, 3] },
    flatCase: { userids: [1, 2, 3] },
    swapCase: { USER_IDS: [1, 2, 3] },
    spongeCase: { uSeR_iDs: [1, 2, 3] },
    lowerCase: { user_ids: [1, 2, 3] },
    upperCase: { USER_IDS: [1, 2, 3] },
    cobolCase: { "USER-IDS": [1, 2, 3] },
  },
  {
    input: { created_at: new Date("2024-02-11") },
    camelCase: { createdAt: new Date("2024-02-11") },
    snakeCase: { created_at: new Date("2024-02-11") },
    pascalCase: { CreatedAt: new Date("2024-02-11") },
    kebabCase: { "created-at": new Date("2024-02-11") },
    trainCase: { "Created-At": new Date("2024-02-11") },
    titleCase: { "Created At": new Date("2024-02-11") },
    constantCase: { CREATED_AT: new Date("2024-02-11") },
    dotCase: { "created.at": new Date("2024-02-11") },
    pathCase: { "created/at": new Date("2024-02-11") },
    sentenceCase: { "Created at": new Date("2024-02-11") },
    macroCase: { CREATED_AT: new Date("2024-02-11") },
    flatCase: { createdat: new Date("2024-02-11") },
    swapCase: { CREATED_AT: new Date("2024-02-11") },
    spongeCase: { cReAtEd_At: new Date("2024-02-11") },
    lowerCase: { created_at: new Date("2024-02-11") },
    upperCase: { CREATED_AT: new Date("2024-02-11") },
    cobolCase: { "CREATED-AT": new Date("2024-02-11") },
  },
  {
    input: { "user@id": 42, "first#name": "Charlie" },
    camelCase: { userId: 42, firstName: "Charlie" },
    snakeCase: { user_id: 42, first_name: "Charlie" },
    pascalCase: { UserId: 42, FirstName: "Charlie" },
    kebabCase: { "user-id": 42, "first-name": "Charlie" },
    trainCase: { "User-Id": 42, "First-Name": "Charlie" },
    titleCase: { "User Id": 42, "First Name": "Charlie" },
    constantCase: { USER_ID: 42, FIRST_NAME: "Charlie" },
    dotCase: { "user.id": 42, "first.name": "Charlie" },
    pathCase: { "user/id": 42, "first/name": "Charlie" },
    sentenceCase: { "User id": 42, "First name": "Charlie" },
    macroCase: { USER_ID: 42, FIRST_NAME: "Charlie" },
    flatCase: { userid: 42, firstname: "Charlie" },
    swapCase: { "USER@ID": 42, "FIRST#NAME": "Charlie" },
    spongeCase: { "uSeR@iD": 42, "fIrSt#NaMe": "Charlie" },
    lowerCase: { "user@id": 42, "first#name": "Charlie" },
    upperCase: { "USER@ID": 42, "FIRST#NAME": "Charlie" },
    cobolCase: { "USER-ID": 42, "FIRST-NAME": "Charlie" },
  },
];

export const objectTestCasesValues = [
  {
    input: { name: "john_doe", username: "super_user" },
    camelCase: { name: "johnDoe", username: "superUser" },
    snakeCase: { name: "john_doe", username: "super_user" },
    pascalCase: { name: "JohnDoe", username: "SuperUser" },
    kebabCase: { name: "john-doe", username: "super-user" },
    trainCase: { name: "John-Doe", username: "Super-User" },
    titleCase: { name: "John Doe", username: "Super User" },
    constantCase: { name: "JOHN_DOE", username: "SUPER_USER" },
    dotCase: { name: "john.doe", username: "super.user" },
    pathCase: { name: "john/doe", username: "super/user" },
    sentenceCase: { name: "John doe", username: "Super user" },
    macroCase: { name: "JOHN_DOE", username: "SUPER_USER" },
    flatCase: { name: "johndoe", username: "superuser" },
    swapCase: { name: "JOHN_DOE", username: "SUPER_USER" },
    spongeCase: { name: "jOhN_dOe", username: "sUpEr_UsEr" },
    lowerCase: { name: "john_doe", username: "super_user" },
    upperCase: { name: "JOHN_DOE", username: "SUPER_USER" },
    cobolCase: { name: "JOHN-DOE", username: "SUPER-USER" },
  },
  {
    input: { user_ids: ["hello_world", "test_case", "snake_case"] },
    camelCase: { user_ids: ["helloWorld", "testCase", "snakeCase"] },
    snakeCase: { user_ids: ["hello_world", "test_case", "snake_case"] },
    pascalCase: { user_ids: ["HelloWorld", "TestCase", "SnakeCase"] },
    kebabCase: { user_ids: ["hello-world", "test-case", "snake-case"] },
    trainCase: { user_ids: ["Hello-World", "Test-Case", "Snake-Case"] },
    titleCase: { user_ids: ["Hello World", "Test Case", "Snake Case"] },
    constantCase: { user_ids: ["HELLO_WORLD", "TEST_CASE", "SNAKE_CASE"] },
    dotCase: { user_ids: ["hello.world", "test.case", "snake.case"] },
    pathCase: { user_ids: ["hello/world", "test/case", "snake/case"] },
    sentenceCase: { user_ids: ["Hello world", "Test case", "Snake case"] },
    macroCase: { user_ids: ["HELLO_WORLD", "TEST_CASE", "SNAKE_CASE"] },
    flatCase: { user_ids: ["helloworld", "testcase", "snakecase"] },
    swapCase: { user_ids: ["HELLO_WORLD", "TEST_CASE", "SNAKE_CASE"] },
    spongeCase: { user_ids: ["hElLo_WoRlD", "tEsT_cAsE", "sNaKe_CaSe"] },
    lowerCase: { user_ids: ["hello_world", "test_case", "snake_case"] },
    upperCase: { user_ids: ["HELLO_WORLD", "TEST_CASE", "SNAKE_CASE"] },
    cobolCase: { user_ids: ["HELLO-WORLD", "TEST-CASE", "SNAKE-CASE"] },
  },
  {
    input: { status: "user_active", role: "system_admin" },
    camelCase: { status: "userActive", role: "systemAdmin" },
    snakeCase: { status: "user_active", role: "system_admin" },
    pascalCase: { status: "UserActive", role: "SystemAdmin" },
    kebabCase: { status: "user-active", role: "system-admin" },
    trainCase: { status: "User-Active", role: "System-Admin" },
    titleCase: { status: "User Active", role: "System Admin" },
    constantCase: { status: "USER_ACTIVE", role: "SYSTEM_ADMIN" },
    dotCase: { status: "user.active", role: "system.admin" },
    pathCase: { status: "user/active", role: "system/admin" },
    sentenceCase: { status: "User active", role: "System admin" },
    macroCase: { status: "USER_ACTIVE", role: "SYSTEM_ADMIN" },
    flatCase: { status: "useractive", role: "systemadmin" },
    swapCase: { status: "USER_ACTIVE", role: "SYSTEM_ADMIN" },
    spongeCase: { status: "uSeR_aCtIvE", role: "sYsTeM_aDmIn" },
    lowerCase: { status: "user_active", role: "system_admin" },
    upperCase: { status: "USER_ACTIVE", role: "SYSTEM_ADMIN" },
    cobolCase: { status: "USER-ACTIVE", role: "SYSTEM-ADMIN" },
  },
  {
    input: {
      nested: { display_name: "hello_world", user_handle: "test_case" },
    },
    camelCase: {
      nested: { display_name: "helloWorld", user_handle: "testCase" },
    },
    snakeCase: {
      nested: { display_name: "hello_world", user_handle: "test_case" },
    },
    pascalCase: {
      nested: { display_name: "HelloWorld", user_handle: "TestCase" },
    },
    kebabCase: {
      nested: { display_name: "hello-world", user_handle: "test-case" },
    },
    trainCase: {
      nested: { display_name: "Hello-World", user_handle: "Test-Case" },
    },
    titleCase: {
      nested: { display_name: "Hello World", user_handle: "Test Case" },
    },
    constantCase: {
      nested: { display_name: "HELLO_WORLD", user_handle: "TEST_CASE" },
    },
    dotCase: {
      nested: { display_name: "hello.world", user_handle: "test.case" },
    },
    pathCase: {
      nested: { display_name: "hello/world", user_handle: "test/case" },
    },
    sentenceCase: {
      nested: { display_name: "Hello world", user_handle: "Test case" },
    },
    macroCase: {
      nested: { display_name: "HELLO_WORLD", user_handle: "TEST_CASE" },
    },
    flatCase: {
      nested: { display_name: "helloworld", user_handle: "testcase" },
    },
    swapCase: {
      nested: { display_name: "HELLO_WORLD", user_handle: "TEST_CASE" },
    },
    spongeCase: {
      nested: { display_name: "hElLo_WoRlD", user_handle: "tEsT_cAsE" },
    },
    lowerCase: {
      nested: { display_name: "hello_world", user_handle: "test_case" },
    },
    upperCase: {
      nested: { display_name: "HELLO_WORLD", user_handle: "TEST_CASE" },
    },
    cobolCase: {
      nested: { display_name: "HELLO-WORLD", user_handle: "TEST-CASE" },
    },
  },
  {
    input: { mixed_array: ["hello_world", 123, "test_case"] },
    camelCase: { mixed_array: ["helloWorld", 123, "testCase"] },
    snakeCase: { mixed_array: ["hello_world", 123, "test_case"] },
    pascalCase: { mixed_array: ["HelloWorld", 123, "TestCase"] },
    kebabCase: { mixed_array: ["hello-world", 123, "test-case"] },
    trainCase: { mixed_array: ["Hello-World", 123, "Test-Case"] },
    titleCase: { mixed_array: ["Hello World", 123, "Test Case"] },
    constantCase: { mixed_array: ["HELLO_WORLD", 123, "TEST_CASE"] },
    dotCase: { mixed_array: ["hello.world", 123, "test.case"] },
    pathCase: { mixed_array: ["hello/world", 123, "test/case"] },
    sentenceCase: { mixed_array: ["Hello world", 123, "Test case"] },
    macroCase: { mixed_array: ["HELLO_WORLD", 123, "TEST_CASE"] },
    flatCase: { mixed_array: ["helloworld", 123, "testcase"] },
    swapCase: { mixed_array: ["HELLO_WORLD", 123, "TEST_CASE"] },
    spongeCase: { mixed_array: ["hElLo_WoRlD", 123, "tEsT_cAsE"] },
    lowerCase: { mixed_array: ["hello_world", 123, "test_case"] },
    upperCase: { mixed_array: ["HELLO_WORLD", 123, "TEST_CASE"] },
    cobolCase: { mixed_array: ["HELLO-WORLD", 123, "TEST-CASE"] },
  },
];

export const objectTestCasesKeysAndValues = [
  {
    input: { user_name: "john_doe", display_name: "super_user" },
    camelCase: { userName: "johnDoe", displayName: "superUser" },
    snakeCase: { user_name: "john_doe", display_name: "super_user" },
    pascalCase: { UserName: "JohnDoe", DisplayName: "SuperUser" },
    kebabCase: { "user-name": "john-doe", "display-name": "super-user" },
    trainCase: { "User-Name": "John-Doe", "Display-Name": "Super-User" },
    titleCase: { "User Name": "John Doe", "Display Name": "Super User" },
    constantCase: { USER_NAME: "JOHN_DOE", DISPLAY_NAME: "SUPER_USER" },
    dotCase: { "user.name": "john.doe", "display.name": "super.user" },
    pathCase: { "user/name": "john/doe", "display/name": "super/user" },
    sentenceCase: { "User name": "John doe", "Display name": "Super user" },
    macroCase: { USER_NAME: "JOHN_DOE", DISPLAY_NAME: "SUPER_USER" },
    flatCase: { username: "johndoe", displayname: "superuser" },
    swapCase: { USER_NAME: "JOHN_DOE", DISPLAY_NAME: "SUPER_USER" },
    spongeCase: { uSeR_nAmE: "jOhN_dOe", dIsPlAy_NaMe: "sUpEr_UsEr" },
    lowerCase: { user_name: "john_doe", display_name: "super_user" },
    upperCase: { USER_NAME: "JOHN_DOE", DISPLAY_NAME: "SUPER_USER" },
    cobolCase: { "USER-NAME": "JOHN-DOE", "DISPLAY-NAME": "SUPER-USER" },
  },
  {
    input: { user_ids: ["one_two", "three_four", "five_six"] },
    camelCase: { userIds: ["oneTwo", "threeFour", "fiveSix"] },
    snakeCase: { user_ids: ["one_two", "three_four", "five_six"] },
    pascalCase: { UserIds: ["OneTwo", "ThreeFour", "FiveSix"] },
    kebabCase: { "user-ids": ["one-two", "three-four", "five-six"] },
    trainCase: { "User-Ids": ["One-Two", "Three-Four", "Five-Six"] },
    titleCase: { "User Ids": ["One Two", "Three Four", "Five Six"] },
    constantCase: { USER_IDS: ["ONE_TWO", "THREE_FOUR", "FIVE_SIX"] },
    dotCase: { "user.ids": ["one.two", "three.four", "five.six"] },
    pathCase: { "user/ids": ["one/two", "three/four", "five/six"] },
    sentenceCase: { "User ids": ["One two", "Three four", "Five six"] },
    macroCase: { USER_IDS: ["ONE_TWO", "THREE_FOUR", "FIVE_SIX"] },
    flatCase: { userids: ["onetwo", "threefour", "fivesix"] },
    swapCase: { USER_IDS: ["ONE_TWO", "THREE_FOUR", "FIVE_SIX"] },
    spongeCase: { uSeR_iDs: ["oNe_TwO", "tHrEe_FoUr", "fIvE_sIx"] },
    lowerCase: { user_ids: ["one_two", "three_four", "five_six"] },
    upperCase: { USER_IDS: ["ONE_TWO", "THREE_FOUR", "FIVE_SIX"] },
    cobolCase: { "USER-IDS": ["ONE-TWO", "THREE-FOUR", "FIVE-SIX"] },
  },
  {
    input: { status_message: "operation_successful" },
    camelCase: { statusMessage: "operationSuccessful" },
    snakeCase: { status_message: "operation_successful" },
    pascalCase: { StatusMessage: "OperationSuccessful" },
    kebabCase: { "status-message": "operation-successful" },
    trainCase: { "Status-Message": "Operation-Successful" },
    titleCase: { "Status Message": "Operation Successful" },
    constantCase: { STATUS_MESSAGE: "OPERATION_SUCCESSFUL" },
    dotCase: { "status.message": "operation.successful" },
    pathCase: { "status/message": "operation/successful" },
    sentenceCase: { "Status message": "Operation successful" },
    macroCase: { STATUS_MESSAGE: "OPERATION_SUCCESSFUL" },
    flatCase: { statusmessage: "operationsuccessful" },
    swapCase: { STATUS_MESSAGE: "OPERATION_SUCCESSFUL" },
    spongeCase: { sTaTuS_mEsSaGe: "oPeRaTiOn_SuCcEsSfUl" },
    lowerCase: { status_message: "operation_successful" },
    upperCase: { STATUS_MESSAGE: "OPERATION_SUCCESSFUL" },
    cobolCase: { "STATUS-MESSAGE": "OPERATION-SUCCESSFUL" },
  },
  {
    input: {
      nested_data: { user_handle: "test_user", role_type: "admin_user" },
    },
    camelCase: {
      nestedData: { userHandle: "testUser", roleType: "adminUser" },
    },
    snakeCase: {
      nested_data: { user_handle: "test_user", role_type: "admin_user" },
    },
    pascalCase: {
      NestedData: { UserHandle: "TestUser", RoleType: "AdminUser" },
    },
    kebabCase: {
      "nested-data": { "user-handle": "test-user", "role-type": "admin-user" },
    },
    trainCase: {
      "Nested-Data": { "User-Handle": "Test-User", "Role-Type": "Admin-User" },
    },
    titleCase: {
      "Nested Data": { "User Handle": "Test User", "Role Type": "Admin User" },
    },
    constantCase: {
      NESTED_DATA: { USER_HANDLE: "TEST_USER", ROLE_TYPE: "ADMIN_USER" },
    },
    dotCase: {
      "nested.data": { "user.handle": "test.user", "role.type": "admin.user" },
    },
    pathCase: {
      "nested/data": { "user/handle": "test/user", "role/type": "admin/user" },
    },
    sentenceCase: {
      "Nested data": { "User handle": "Test user", "Role type": "Admin user" },
    },
    macroCase: {
      NESTED_DATA: { USER_HANDLE: "TEST_USER", ROLE_TYPE: "ADMIN_USER" },
    },
    flatCase: {
      nesteddata: { userhandle: "testuser", roletype: "adminuser" },
    },
    swapCase: {
      NESTED_DATA: { USER_HANDLE: "TEST_USER", ROLE_TYPE: "ADMIN_USER" },
    },
    spongeCase: {
      nEsTeD_dAtA: { uSeR_hAnDlE: "tEsT_uSeR", rOlE_tYpE: "aDmIn_UsEr" },
    },
    lowerCase: {
      nested_data: { user_handle: "test_user", role_type: "admin_user" },
    },
    upperCase: {
      NESTED_DATA: { USER_HANDLE: "TEST_USER", ROLE_TYPE: "ADMIN_USER" },
    },
    cobolCase: {
      "NESTED-DATA": { "USER-HANDLE": "TEST-USER", "ROLE-TYPE": "ADMIN-USER" },
    },
  },
];

export const whitespaceTestCases = [
  {
    input: "  hello   world  ",
    camelCase: { preserveWhitespace: true, result: "  helloWorld  " },
    snakeCase: { preserveWhitespace: true, result: "  hello_world  " },
    pascalCase: { preserveWhitespace: true, result: "  HelloWorld  " },
    kebabCase: { preserveWhitespace: true, result: "  hello-world  " },
    trainCase: { preserveWhitespace: true, result: "  Hello-World  " },
    titleCase: { preserveWhitespace: true, result: "  Hello   World  " },
    constantCase: { preserveWhitespace: true, result: "  HELLO_WORLD  " },
    dotCase: { preserveWhitespace: true, result: "  hello.world  " },
    pathCase: { preserveWhitespace: true, result: "  hello/world  " },
    sentenceCase: { preserveWhitespace: true, result: "  Hello   world  " },
    macroCase: { preserveWhitespace: true, result: "  HELLO_WORLD  " },
    flatCase: { preserveWhitespace: true, result: "  helloworld  " },
    spongeCase: { preserveWhitespace: true, result: "  hElLo   WoRlD  " },
    lowerCase: { preserveWhitespace: true, result: "  hello   world  " },
    upperCase: { preserveWhitespace: true, result: "  HELLO   WORLD  " },
    cobolCase: { preserveWhitespace: true, result: "  HELLO-WORLD  " },
  },
  {
    input: "\thello\n\nworld\t",
    camelCase: { preserveWhitespace: true, result: "\thelloWorld\t" },
    snakeCase: { preserveWhitespace: true, result: "\thello_world\t" },
    pascalCase: { preserveWhitespace: true, result: "\tHelloWorld\t" },
    kebabCase: { preserveWhitespace: true, result: "\thello-world\t" },
    trainCase: { preserveWhitespace: true, result: "\tHello-World\t" },
    titleCase: { preserveWhitespace: true, result: "\tHello\n\nWorld\t" },
    constantCase: { preserveWhitespace: true, result: "\tHELLO_WORLD\t" },
    dotCase: { preserveWhitespace: true, result: "\thello.world\t" },
    pathCase: { preserveWhitespace: true, result: "\thello/world\t" },
    sentenceCase: { preserveWhitespace: true, result: "\tHello\n\nworld\t" },
    macroCase: { preserveWhitespace: true, result: "\tHELLO_WORLD\t" },
    flatCase: { preserveWhitespace: true, result: "\thelloworld\t" },
    spongeCase: { preserveWhitespace: true, result: "\thElLo\n\nWoRlD\t" },
    lowerCase: { preserveWhitespace: true, result: "\thello\n\nworld\t" },
    upperCase: { preserveWhitespace: true, result: "\tHELLO\n\nWORLD\t" },
    cobolCase: { preserveWhitespace: true, result: "\tHELLO-WORLD\t" },
  },
  {
    input: "  hello   world  test  ",
    camelCase: { preserveWhitespace: true, result: "  helloWorldTest  " },
    snakeCase: { preserveWhitespace: true, result: "  hello_world_test  " },
    pascalCase: { preserveWhitespace: true, result: "  HelloWorldTest  " },
    kebabCase: { preserveWhitespace: true, result: "  hello-world-test  " },
    trainCase: { preserveWhitespace: true, result: "  Hello-World-Test  " },
    titleCase: { preserveWhitespace: true, result: "  Hello   World   Test  " },
    constantCase: { preserveWhitespace: true, result: "  HELLO_WORLD_TEST  " },
    dotCase: { preserveWhitespace: true, result: "  hello.world.test  " },
    pathCase: { preserveWhitespace: true, result: "  hello/world/test  " },
    sentenceCase: {
      preserveWhitespace: true,
      result: "  Hello   world   test  ",
    },
    macroCase: { preserveWhitespace: true, result: "  HELLO_WORLD_TEST  " },
    flatCase: { preserveWhitespace: true, result: "  helloworldtest  " },
    spongeCase: {
      preserveWhitespace: true,
      result: "  hElLo   WoRlD   tEsT  ",
    },
    lowerCase: { preserveWhitespace: true, result: "  hello   world   test  " },
    upperCase: { preserveWhitespace: true, result: "  HELLO   WORLD   TEST  " },
    cobolCase: { preserveWhitespace: true, result: "  HELLO-WORLD-TEST  " },
  },
  {
    input: "\r\n\thello  \f\v  world\r\n",
    camelCase: { preserveWhitespace: true, result: "\r\n\thelloWorld\r\n" },
    snakeCase: { preserveWhitespace: true, result: "\r\n\thello_world\r\n" },
    pascalCase: { preserveWhitespace: true, result: "\r\n\tHelloWorld\r\n" },
    kebabCase: { preserveWhitespace: true, result: "\r\n\thello-world\r\n" },
    trainCase: { preserveWhitespace: true, result: "\r\n\tHello-World\r\n" },
    titleCase: {
      preserveWhitespace: true,
      result: "\r\n\tHello  \f\v  World\r\n",
    },
    constantCase: { preserveWhitespace: true, result: "\r\n\tHELLO_WORLD\r\n" },
    dotCase: { preserveWhitespace: true, result: "\r\n\thello.world\r\n" },
    pathCase: { preserveWhitespace: true, result: "\r\n\thello/world\r\n" },
    sentenceCase: {
      preserveWhitespace: true,
      result: "\r\n\tHello  \f\v  world\r\n",
    },
    macroCase: { preserveWhitespace: true, result: "\r\n\tHELLO_WORLD\r\n" },
    flatCase: { preserveWhitespace: true, result: "\r\n\thelloworld\r\n" },
    spongeCase: {
      preserveWhitespace: true,
      result: "\r\n\thElLo  \f\v  WoRlD\r\n",
    },
    lowerCase: {
      preserveWhitespace: true,
      result: "\r\n\thello  \f\v  world\r\n",
    },
    upperCase: {
      preserveWhitespace: true,
      result: "\r\n\tHELLO  \f\v  WORLD\r\n",
    },
    cobolCase: { preserveWhitespace: true, result: "\r\n\tHELLO-WORLD\r\n" },
  },
];

export const whitespaceAndSpecialCharacterTestCases = [
  {
    input: "  hello   @   world  ",
    camelCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  hello   @   world  ",
    },
    snakeCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  hello   @   world  ",
    },
    pascalCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  Hello   @   World  ",
    },
    kebabCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  hello   @   world  ",
    },
    trainCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  Hello   @   World  ",
    },
    titleCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  Hello   @   World  ",
    },
    constantCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  HELLO   @   WORLD  ",
    },
    dotCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  hello   @   world  ",
    },
    pathCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  hello   @   world  ",
    },
    sentenceCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  Hello   @   world  ",
    },
    macroCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  HELLO   @   WORLD  ",
    },
    flatCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  hello   @   world  ",
    },
    spongeCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  hElLo   @   wOrLd  ",
    },
    lowerCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  hello   @   world  ",
    },
    upperCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  HELLO   @   WORLD  ",
    },
    cobolCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  HELLO   @   WORLD  ",
    },
  },
  {
    input: "\thello.world\n",
    camelCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "\thello.world\n",
    },
    snakeCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "\thello.world\n",
    },
    pascalCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "\tHello.World\n",
    },
    kebabCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "\thello.world\n",
    },
    trainCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "\tHello.World\n",
    },
    titleCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "\tHello.World\n",
    },
    constantCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "\tHELLO.WORLD\n",
    },
    dotCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "\thello.world\n",
    },
    pathCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "\thello.world\n",
    },
    sentenceCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "\tHello.world\n",
    },
    macroCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "\tHELLO.WORLD\n",
    },
    flatCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "\thello.world\n",
    },
    spongeCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "\thElLo.WoRlD\n",
    },
    lowerCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "\thello.world\n",
    },
    upperCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "\tHELLO.WORLD\n",
    },
    cobolCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "\tHELLO.WORLD\n",
    },
  },
  {
    input: "  hello@world.com   \n   test#123  ",
    camelCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  hello@world.com   \n   test#123  ",
    },
    snakeCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  hello@world.com   \n   test#123  ",
    },
    pascalCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  Hello@World.Com   \n   Test#123  ",
    },
    kebabCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  hello@world.com   \n   test#123  ",
    },
    trainCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  Hello@World.Com   \n   Test#123  ",
    },
    titleCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  Hello@World.Com   \n   Test#123  ",
    },
    constantCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  HELLO@WORLD.COM   \n   TEST#123  ",
    },
    dotCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  hello@world.com   \n   test#123  ",
    },
    pathCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  hello@world.com   \n   test#123  ",
    },
    sentenceCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  Hello@world.com   \n   Test#123  ",
    },
    macroCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  HELLO@WORLD.COM   \n   TEST#123  ",
    },
    flatCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  hello@world.com   \n   test#123  ",
    },
    spongeCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  hElLo@WoRlD.cOm   \n   tEsT#123  ",
    },
    lowerCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  hello@world.com   \n   test#123  ",
    },
    upperCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  HELLO@WORLD.COM   \n   TEST#123  ",
    },
    cobolCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  HELLO@WORLD.COM   \n   TEST#123  ",
    },
  },
  {
    input: "\t$hello   &   world!!\n\t(test)  ",
    camelCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "\t$hello   &   world!!\n\t(test)  ",
    },
    snakeCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "\t$hello   &   world!!\n\t(test)  ",
    },
    pascalCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "\t$Hello   &   World!!\n\t(Test)  ",
    },
    kebabCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "\t$hello   &   world!!\n\t(test)  ",
    },
    trainCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "\t$Hello   &   World!!\n\t(Test)  ",
    },
    titleCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "\t$Hello   &   World!!\n\t(Test)  ",
    },
    constantCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "\t$HELLO   &   WORLD!!\n\t(TEST)  ",
    },
    dotCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "\t$hello   &   world!!\n\t(test)  ",
    },
    pathCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "\t$hello   &   world!!\n\t(test)  ",
    },
    sentenceCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "\t$Hello   &   world!!\n\t(test)  ",
    },
    macroCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "\t$HELLO   &   WORLD!!\n\t(TEST)  ",
    },
    flatCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "\t$hello   &   world!!\n\t(test)  ",
    },
    spongeCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "\t$hElLo   &   wOrLd!!\n\t(tEsT)  ",
    },
    lowerCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "\t$hello   &   world!!\n\t(test)  ",
    },
    upperCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "\t$HELLO   &   WORLD!!\n\t(TEST)  ",
    },
    cobolCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "\t$HELLO   &   WORLD!!\n\t(TEST)  ",
    },
  },
  {
    input: "  [hello]   {   world   }   /test/  ",
    camelCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  [hello]   {   world   }   /test/  ",
    },
    snakeCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  [hello]   {   world   }   /test/  ",
    },
    pascalCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  [Hello]   {   World   }   /Test/  ",
    },
    kebabCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  [hello]   {   world   }   /test/  ",
    },
    trainCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  [Hello]   {   World   }   /Test/  ",
    },
    titleCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  [Hello]   {   World   }   /Test/  ",
    },
    constantCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  [HELLO]   {   WORLD   }   /TEST/  ",
    },
    dotCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  [hello]   {   world   }   /test/  ",
    },
    pathCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  [hello]   {   world   }   /test/  ",
    },
    sentenceCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  [Hello]   {   world   }   /test/  ",
    },
    macroCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  [HELLO]   {   WORLD   }   /TEST/  ",
    },
    flatCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  [hello]   {   world   }   /test/  ",
    },
    spongeCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  [hElLo]   {   wOrLd   }   /tEsT/  ",
    },
    lowerCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  [hello]   {   world   }   /test/  ",
    },
    upperCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  [HELLO]   {   WORLD   }   /TEST/  ",
    },
    cobolCase: {
      preserveWhitespace: true,
      preserveSpecialCharacters: true,
      result: "  [HELLO]   {   WORLD   }   /TEST/  ",
    },
  },
];
